# Copyright 2023 Aleksandr Ovsiankin
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#	  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{- if .Values.rbac.createServiceAccounts }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: '{{ template "service.name" . }}-node'
  namespace: '{{ .Release.Namespace }}'

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: '{{ template "service.name" . }}-controller'
  namespace: '{{ .Release.Namespace }}'
{{- end }}

{{- if .Values.rbac.createRoles }}
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: '{{ template "service.name" . }}-provisioner-runner'
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["get", "list"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch"]

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: '{{ template "service.name" . }}-provisioner-cfg'
  namespace: '{{ .Release.Namespace }}'
rules:
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csistoragecapacities"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get"]
  - apiGroups: ["apps"]
    resources: ["replicasets"]
    verbs: ["get"]

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: '{{ template "service.name" . }}-resizer-runner'
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims/status"]
    verbs: ["patch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]

---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: '{{ template "service.name" . }}-resizer-cfg'
  namespace: '{{ .Release.Namespace }}'
rules:
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]

{{- end }}


{{- if .Values.rbac.createServiceAccounts }}
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: '{{ template "service.name" . }}-provisioner-runner'
subjects:
  - kind: ServiceAccount
    name: '{{ template "service.name" . }}-node'
    namespace: '{{ .Release.Namespace }}'
roleRef:
  kind: ClusterRole
  name: '{{ template "service.name" . }}-provisioner-runner'
  apiGroup: rbac.authorization.k8s.io

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: '{{ template "service.name" . }}-provisioner-cfg'
  namespace: '{{ .Release.Namespace }}'
subjects:
  - kind: ServiceAccount
    name: '{{ template "service.name" . }}-node'
    namespace: '{{ .Release.Namespace }}'
roleRef:
  kind: Role
  name: '{{ template "service.name" . }}-provisioner-cfg'
  apiGroup: rbac.authorization.k8s.io

---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: '{{ template "service.name" . }}-resizer-runner'
subjects:
  - kind: ServiceAccount
    name: '{{ template "service.name" . }}-controller'
    namespace: '{{ .Release.Namespace }}'
roleRef:
  kind: ClusterRole
  name: '{{ template "service.name" . }}-resizer-runner'
  apiGroup: rbac.authorization.k8s.io

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: '{{ template "service.name" . }}-resizer-cfg'
  namespace: '{{ .Release.Namespace }}'
subjects:
  - kind: ServiceAccount
    name: '{{ template "service.name" . }}-controller'
    namespace: '{{ .Release.Namespace }}'
roleRef:
  kind: Role
  name: '{{ template "service.name" . }}-resizer-cfg'
  apiGroup: rbac.authorization.k8s.io
{{- end }}